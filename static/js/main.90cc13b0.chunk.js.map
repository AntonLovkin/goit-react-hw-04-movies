{"version":3,"sources":["views/HomePage.js","API.js","views/RenderMovies.js","views/MoviesPage.js","views/Cast.js","views/Reviews.js","views/MovieDetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","state","movies","a","axios","get","response","this","setState","data","results","map","movie","to","id","title","Component","API","BASE_URL","API_KEY","fetchTrendingMovies","then","fetchMoviesWithSearchQuery","query","fetchMovieDetails","fetchMovieReviews","fetchMovieCast","cast","withRouter","location","name","pathname","from","className","MoviesPage","JSON","parse","localStorage","getItem","value","renderMovies","e","preventDefault","setItem","stringify","console","log","length","alert","setValue","target","onSubmit","type","onChange","Cast","props","match","params","movieId","profile_path","character","src","alt","Reviews","reviews","author","content","MovieDetailsPage","genres","poster_path","overview","vote_average","url","path","render","component","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2UAyCeA,E,4MAjCXC,MAAQ,CACJC,OAAQ,I,8FAGZ,4BAAAC,EAAA,sEAE2BC,IAAMC,IAAN,kEATf,qCAOZ,OAEUC,EAFV,OAMIC,KAAKC,SAAS,CAACN,OAAQI,EAASG,KAAKC,UANzC,gD,0EASA,WAGI,OACI,qCACI,0CAEA,6BACKH,KAAKN,MAAMC,OAAOS,KAAI,SAAAC,GAAK,OACxB,6BACI,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SACKF,EAAMG,SAFNH,EAAME,gB,GAvBhBE,aCoBRC,EAzBH,CACRC,SAAU,+BACVC,QAAS,mCACTC,oBAHQ,WAIJ,OAAOhB,IAAMC,IAAN,UAAaE,KAAKW,SAAlB,qCAAuDX,KAAKY,UAAWE,MAAK,SAAAf,GAAQ,OAAIA,EAASG,KAAKC,YAGjHY,2BAPQ,SAOmBC,GACvB,OAAOnB,IAAMC,IAAN,UAAaE,KAAKW,SAAlB,iCAAmDX,KAAKY,QAAxD,kBAAyEI,IAASF,MAAK,SAAAf,GAAQ,OAAIA,EAASG,KAAKC,YAG5Hc,kBAXQ,SAWUV,GACd,OAAOV,IAAMC,IAAN,UAAaE,KAAKW,SAAlB,kBAAoCJ,EAApC,oBAAkDP,KAAKY,UAAWE,MAAK,SAAAf,GAAQ,OAAIA,EAASG,SAGvGgB,kBAfQ,SAeUX,GACd,OAAOV,IAAMC,IAAN,UAAaE,KAAKW,SAAlB,kBAAoCJ,EAApC,4BAA0DP,KAAKY,UAAWE,MAAK,SAAAf,GAAQ,OAAIA,EAASG,KAAKC,YAGpHgB,eAnBQ,SAmBOZ,GACX,OAAOV,IAAMC,IAAN,UAAaE,KAAKW,SAAlB,kBAAoCJ,EAApC,4BAA0DP,KAAKY,UAAWE,MAAK,SAAAf,GAAQ,OAAIA,EAASG,KAAKkB,UCHzGC,mBAff,YAA6C,IAArB1B,EAAoB,EAApBA,OAAQ2B,EAAY,EAAZA,SAC5B,OACI,6BAAK3B,EAAOS,KAAI,gBAAEG,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOe,EAAb,EAAaA,KAAb,OACf,6BACG,eAAC,IAAD,CAAMjB,GAAI,CACNkB,SAAS,UAAD,OAAYjB,GACpBb,MAAO,CAAC+B,KAAMH,IACfI,UAAU,aAHb,cAG4BlB,GAAgBe,MAJtChB,WCmCHoB,E,4MApCXjC,MAAQ,CACJC,OAAQiC,KAAKC,MAAMC,aAAaC,QAAQ,WACxCC,MAAO,I,EAGVC,aAAe,SAACC,GACbA,EAAEC,iBACFzB,EAAIK,2BAA2B,EAAKrB,MAAMsC,OAAOlB,MAAK,SAAAnB,GAClD,EAAKM,SAAS,CAAEN,OAAQA,IACxBmC,aAAaM,QAAQ,SAAUR,KAAKS,UAAU1C,IAC9C2C,QAAQC,IAAI,EAAK7C,MAAMC,QACU,IAA7B,EAAKD,MAAMC,OAAO6C,QACtBC,MAAM,gD,EAKdC,SAAW,SAACR,GACR,EAAKjC,SAAS,CAAE+B,MAAOE,EAAES,OAAOX,S,4CAGpC,WACI,MAA0BhC,KAAKN,MAAvBsC,EAAR,EAAQA,MAAOrC,EAAf,EAAeA,OAEf,OADA2C,QAAQC,IAAI5C,GAER,qCACI,uBAAMiD,SAAU5C,KAAKiC,aAArB,UACI,uBAAOY,KAAK,OAAOb,MAAOA,EAAOc,SAAU9C,KAAK0C,SAAUhB,UAAU,UACpE,wBAAQmB,KAAK,SAAb,uBAEHlD,EAAO6C,OAAS,GAAK,cAAC,EAAD,CAAc7C,OAAQA,W,GA/BnCc,a,QCiCVsC,E,4MAlCXrD,MAAQ,CACJ0B,KAAM,I,uDAGV,WAAqB,IAAD,OAChBV,EAAIS,eAAenB,KAAKgD,MAAMC,MAAMC,OAAOC,SAASrC,MAAK,SAAAM,GAAI,OAAI,EAAKnB,SAAS,CAAEmB,KAAMA,OACvFkB,QAAQC,IAAIvC,KAAKN,MAAM0B,MACvBkB,QAAQC,IAAIvC,KAAKgD,MAAMC,MAAMC,OAAOC,W,oBAGxC,WAGI,OADAb,QAAQC,IAAIvC,KAAKN,MAAM0B,MAEnB,qCACI,2CACA,oBAAIM,UAAU,YAAd,SACK1B,KAAKN,MAAM0B,KAAKhB,KAAI,gBAAEG,EAAF,EAAEA,GAAI6C,EAAN,EAAMA,aAAc7B,EAApB,EAAoBA,KAAM8B,EAA1B,EAA0BA,UAA1B,OACjB,6BACI,sBAAK3B,UAAU,iBAAf,UACI,qBAAK4B,IAAG,UAThB,kCASgB,YAAgBF,GAAgBG,IAAKhC,EAAMG,UAAU,uBAC7D,gCACI,6BAAKH,IACL,4BAAI8B,WALP9C,e,GAnBdE,aC8BJ+C,E,4MA7BX9D,MAAQ,CACJ+D,QAAS,I,uDAGb,WAAqB,IAAD,OAChB/C,EAAIQ,kBAAkBlB,KAAKgD,MAAMC,MAAMC,OAAOC,SAASrC,MAAK,SAAA2C,GAAO,OAAI,EAAKxD,SAAS,CAAEwD,QAASA,OAChGnB,QAAQC,IAAIvC,KAAKN,MAAM+D,SACvBnB,QAAQC,IAAIvC,KAAKgD,MAAMC,MAAMC,OAAOC,W,oBAGxC,WACI,OACI,qCACI,8CACCnD,KAAKN,MAAM+D,QAAQjB,OAAS,EAC3B,6BACGxC,KAAKN,MAAM+D,QAAQrD,KAAI,gBAAEG,EAAF,EAAEA,GAAImD,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACpB,+BACI,6BAAKD,IACL,4BAAIC,MAFCpD,QAMf,wE,GAxBIE,aC6DPmD,E,4MAvDXlE,MAAQ,CACJmE,OAAQ,GACRC,YAAa,KACbC,SAAU,KACVvD,MAAO,KACPwD,aAAc,M,uDAGlB,WAAqB,IAAD,OAChBtD,EAAIO,kBAAkBjB,KAAKgD,MAAMC,MAAMC,OAAOC,SAASrC,MAAK,SAAAZ,GAAI,OAAI,EAAKD,SAAL,eAAmBC,S,oBAQ3F,WAAU,IAAD,OAML,GAFoBF,KAAKgD,MAAMC,MAAMC,OAA7BC,QACanD,KAAKgD,MAAlB1B,SACkDtB,KAAKN,OAAxDmE,EAAP,EAAOA,OAAOC,EAAd,EAAcA,YAAYC,EAA1B,EAA0BA,SAASvD,EAAnC,EAAmCA,MAAMwD,EAAzC,EAAyCA,aACzC,OACA,qCACQ,mDAAsBhE,KAAKgD,MAAMC,MAAMC,OAAOC,WAC9C,6BAAK3C,IACL,qBAAK8C,IAAG,UATA,mCASA,OAAeQ,GAAeP,IAAK/C,IAC3C,gDAAmBwD,KACnB,0CACA,4BAAID,IACJ,wCACA,6BACKF,EAAOzD,KAAI,gBAAGG,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAP,OACR,6BAAcA,GAALhB,QAEjB,+BACI,6BACI,cAAC,IAAD,CAASD,GAAE,UAAKN,KAAKgD,MAAMC,MAAMgB,IAAtB,SAAX,oBAEJ,6BACI,cAAC,IAAD,CAAS3D,GAAE,UAAKN,KAAKgD,MAAMC,MAAMgB,IAAtB,YAAX,0BAIR,cAAC,IAAD,CAAOC,KAAI,UAAKlE,KAAKgD,MAAMC,MAAMiB,KAAtB,SAAmCC,OAAQ,SAAAnB,GAClD,OAAO,cAAC,EAAD,2BAAUA,GAAV,IAAiBrD,OAAQ,EAAKD,MAAMC,aAG/C,cAAC,IAAD,CAAOuE,KAAI,UAAKlE,KAAKgD,MAAMC,MAAMiB,KAAtB,YAAsCE,UAAWZ,W,GAnD7C/C,aC4BhB4D,EAzBH,kBACV,qCACE,+BACE,6BACE,cAAC,IAAD,CAAM/D,GAAG,IAAT,wBAED,6BACC,cAAC,IAAD,CAAMA,GAAG,UAAT,6BAMJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgE,OAAK,EAACJ,KAAK,IAAIE,UAAW3E,IACjC,cAAC,IAAD,CAAO6E,OAAK,EAACJ,KAAK,UAAUE,UAAWzC,IACvC,cAAC,IAAD,CAAOuC,KAAK,mBAAmBE,UAAWR,WCfjCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASZ,OACP,eAAC,IAAMa,WAAP,WACC,cAAC,IAAD,UACC,cAAC,EAAD,MAFF,OAKAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.90cc13b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst API_KEY = \"3648f672b1c21855bded6f7b57b6e29a\"\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        movies: [],\r\n    }\r\n\r\n    async componentDidMount() {\r\n        \r\n        const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\r\n            // .then(response => this.setState({ movies: response.data.results }))\r\n        // console.log(response.data.results);\r\n\r\n        this.setState({movies: response.data.results})\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.match.url);\r\n        \r\n        return (\r\n            <>\r\n                <h1>HomePage</h1>\r\n\r\n                <ul>\r\n                    {this.state.movies.map(movie => (\r\n                        <li key={movie.id}>\r\n                            <Link to={`/movies/${movie.id}`}>\r\n                                {movie.title}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import axios from 'axios';\r\n\r\nconst API = {\r\n    BASE_URL: 'https://api.themoviedb.org/3',\r\n    API_KEY: \"3648f672b1c21855bded6f7b57b6e29a\",\r\n    fetchTrendingMovies() {\r\n        return axios.get(`${this.BASE_URL}/trending/all/day?api_key=${this.API_KEY}`).then(response => response.data.results);\r\n    },\r\n\r\n    fetchMoviesWithSearchQuery(query) {\r\n        return axios.get(`${this.BASE_URL}/search/movie?api_key=${this.API_KEY}&query=${query}`).then(response => response.data.results);\r\n    },\r\n\r\n    fetchMovieDetails(id) {\r\n        return axios.get(`${this.BASE_URL}/movie/${id}?api_key=${this.API_KEY}`).then(response => response.data);\r\n    },\r\n\r\n    fetchMovieReviews(id) {\r\n        return axios.get(`${this.BASE_URL}/movie/${id}/reviews?api_key=${this.API_KEY}`).then(response => response.data.results);\r\n    },\r\n\r\n    fetchMovieCast(id) {\r\n        return axios.get(`${this.BASE_URL}/movie/${id}/credits?api_key=${this.API_KEY}`).then(response => response.data.cast)\r\n        console.log();\r\n    }\r\n};\r\n\r\nexport default API;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import './RenderMovies.scss'\r\n\r\nfunction RenderMovies({ movies, location }) {\r\n    return (\r\n        <ul>{movies.map(({id, title, name}) =>\r\n        (<li key={id} >\r\n            <Link to={{\r\n                pathname: `movies/${id}`,\r\n                state: {from: location}\r\n            }} className='movie-link'> {title ? title : name}\r\n             </Link>\r\n        </li>))\r\n        }\r\n        </ul >\r\n    );\r\n};\r\n\r\nexport default withRouter(RenderMovies);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport API from '../API';\r\nimport RenderMovies from './RenderMovies';\r\n\r\nclass MoviesPage extends Component {\r\n    state = {\r\n        movies: JSON.parse(localStorage.getItem('movies')),\r\n        value: '',\r\n    }\r\n\r\n     renderMovies = (e) => {\r\n        e.preventDefault();\r\n        API.fetchMoviesWithSearchQuery(this.state.value).then(movies => {\r\n            this.setState({ movies: movies });\r\n            localStorage.setItem('movies', JSON.stringify(movies));\r\n            console.log(this.state.movies);\r\n            if (this.state.movies.length === 0) {\r\n            alert('We could not find movies with this query')\r\n            };\r\n        });\r\n    };\r\n\r\n    setValue = (e) => {\r\n        this.setState({ value: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { value, movies } = this.state;\r\n        console.log(movies);\r\n        return (\r\n            <>\r\n                <form onSubmit={this.renderMovies}>\r\n                    <input type=\"text\" value={value} onChange={this.setValue} className='input'/>\r\n                    <button type='submit'>Search</button>\r\n                </form>\r\n                {movies.length > 0 && <RenderMovies movies={movies} />}\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MoviesPage;\r\n\r\n// const API_KEY = \"3648f672b1c21855bded6f7b57b6e29a\"\r\n\r\n// class MoviesPage extends Component {\r\n//     state = {\r\n//         movies: [],\r\n//         value: '',\r\n//     }\r\n\r\n//     async componentDidMount() {\r\n        \r\n//         const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\r\n//             // .then(response => this.setState({ movies: response.data.results }))\r\n//         // console.log(response.data.results);\r\n\r\n//         // console.log(this.state.movies);\r\n\r\n//         this.setState({movies: response.data.results})\r\n//     }\r\n\r\n//     setValue = (e) => {\r\n//         this.setState({ value: e.target.value });\r\n//     };\r\n    \r\n//     render() {\r\n//         const { value, movies } = this.state;\r\n//         console.log(movies);\r\n//         return (\r\n//             <>\r\n//                 <form onSubmit={this.renderMovies}>\r\n//                     <input type=\"text\" value={value} onChange={this.setValue} className='input'/>\r\n//                     <button type='submit'>Search</button>\r\n//                 </form>\r\n//                 {/* {movies.length > 0 && <RenderMovies movies={movies} />} */}\r\n//             </>\r\n//         );\r\n//     };\r\n// }\r\n\r\n","import React, { Component } from 'react';\r\nimport API from '../API';\r\n\r\nclass Cast extends Component {\r\n    state = {\r\n        cast: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.fetchMovieCast(this.props.match.params.movieId).then(cast => this.setState({ cast: cast }))\r\n        console.log(this.state.cast);\r\n        console.log(this.props.match.params.movieId);\r\n    }\r\n\r\n    render() {\r\n        const IMG_URL = 'https://image.tmdb.org/t/p/w300';\r\n        console.log(this.state.cast);\r\n        return (\r\n            <>\r\n                <h1>Cast List</h1>\r\n                <ul className='cast-list'>\r\n                    {this.state.cast.map(({id, profile_path, name, character}) => (\r\n                        <li key={id}>\r\n                            <div className='cast-container'>\r\n                                <img src={`${IMG_URL}/${profile_path}`} alt={name} className='cast-container_img'/>\r\n                                <div>\r\n                                    <h3>{name}</h3>\r\n                                    <p>{character}</p>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cast;","import React, { Component } from 'react';\r\nimport API from '../API';\r\n\r\nclass Reviews extends Component {\r\n    state = {\r\n        reviews: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.fetchMovieReviews(this.props.match.params.movieId).then(reviews => this.setState({ reviews: reviews }))\r\n        console.log(this.state.reviews);\r\n        console.log(this.props.match.params.movieId);\r\n    }\r\n\r\n    render() {       \r\n        return (\r\n            <>\r\n                <h1>Reviews List</h1>\r\n                {this.state.reviews.length > 0\r\n                ? <ul>\r\n                    {this.state.reviews.map(({id, author, content}) => (\r\n                        <li key={id}>\r\n                            <h3>{author}</h3>\r\n                            <p>{content}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                : <h1>Hello!! There is no reviews yet</h1>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reviews;","import React, { Component } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport API from '../API';\r\n\r\n// const API_KEY = \"3648f672b1c21855bded6f7b57b6e29a\"\r\n\r\nclass MovieDetailsPage extends Component {\r\n    state = {\r\n        genres: [],\r\n        poster_path: null,\r\n        overview: null,\r\n        title: null,\r\n        vote_average: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.fetchMovieDetails(this.props.match.params.movieId).then(data => this.setState({ ...data }));\r\n        // console.log(this.props.match.params.movieId);\r\n        \r\n        // const { movieId } = this.props.match.params;\r\n        // const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n        // console.log(response.data);\r\n        // this.setState({...response.data})\r\n    }\r\n    render() {\r\n        // console.log(this.props.match.path);\r\n        const IMG_URL = 'https://image.tmdb.org/t/p/w300';\r\n        \r\n        const { movieId } = this.props.match.params;\r\n        const { location } = this.props;\r\n        const {genres,poster_path,overview,title,vote_average } = this.state;\r\n        return (\r\n        <>\r\n                <h1>MovieDetailsPage-{this.props.match.params.movieId}</h1>\r\n                <h2>{title}</h2>\r\n                <img src={`${IMG_URL}${poster_path}`} alt={title}/>\r\n                <h2>Movie rating: {vote_average}</h2>\r\n                <h2>Overview</h2>\r\n                <p>{overview}</p>\r\n                <h2>Genres</h2>\r\n                <ul>\r\n                    {genres.map(({ id, name }) => \r\n                        <li key={id}>{name}</li>)}\r\n                </ul>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to={`${this.props.match.url}/cast`}>Cast</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={`${this.props.match.url}/reviews`}>Reviews</NavLink>\r\n                    </li>\r\n                </ul>\r\n                \r\n                <Route path={`${this.props.match.path}/cast`} render={props => {\r\n                    return <Cast {...props} movies={this.state.movies} />\r\n                }}\r\n                />\r\n                <Route path={`${this.props.match.path}/reviews`} component={Reviews} />\r\n        </>)    \r\n    }   \r\n}\r\n\r\nexport default MovieDetailsPage;","import './App.css';\nimport React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport HomePage from './views/HomePage';\nimport MoviesPage from './views/MoviesPage';\nimport MovieDetailsPage from './views/MovieDetailsPage';\n// import Cast from './views/MoviesPage';\n// import Reviews from './views/MoviesPage';\n\n\n\nconst App = () => (\n  <>\n    <ul>\n      <li>\n        <Link to=\"/\">HomePage</Link>\n      </li>\n       <li>\n        <Link to=\"/movies\">MoviesPage</Link>\n      </li>\n       {/* <li>\n        <Link to=\"/movies/:movieId\">MovieDetailsPage</Link>\n      </li> */}\n    </ul>\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/movies\" component={MoviesPage} />\n      <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\n            \n      {/* <Route path=\"/movies/:movieId/cast\" component={Cast} />\n      <Route path=\"/movies/:movieId/reviews\" component={Reviews} /> */}\n      {/* <Route component={HomePage} /> */}\n    </Switch>\n  </>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}